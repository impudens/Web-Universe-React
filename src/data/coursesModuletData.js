export const layoutDataLvlFirst = [
    {
        title: 'Старт',
        link: '/frontend/html-and-css-level-one/start',
        description: 'Познакомимся с преподавателями, наставниками и учебным процессом на курсе. Рассмотрим устройство веба и чем вы будете заниматься на работе. Установим и настроим инструменты для работы.'
    },
    {
        title: 'Разметка',
        link: '#',
        description: 'Создадим семантичную, доступную и выразительную разметку страниц проектов по макету.'
    },
    {
        title: 'Графика',
        link: '#',
        description: 'Экспортируем графику из макета, подключим контентную графику в разметку.'
    },
    {
        title: 'Базовая стилизация',
        link: '#',
        description: 'Выполним базовую стилизацию страниц проекта.'
    },
    {
        title: 'Сетки страниц на флексах',
        link: '#',
        description: 'Построим крупные сетки страниц с помощью флексов.'
    },
    {
        title: 'Сетки компонентов на флексах',
        link: '#',
        description: 'Создадим мелкие сетки компонентов страниц при помощи флексов.'
    },
    {
        title: 'Сетки компонентов на гридах',
        link: '#',
        description: 'Создадим мелкие сетки компонентов страниц при помощи гридов.'
    },
    {
        title: 'Декоративные элементы',
        link: '#',
        description: 'Добавим на страницы проектов мелкие декоративные и иконочные графические элементы. Стилизуем текстовые блоки, декоративные элементы внутри сеток компонентов, кнопки и ссылки.'
    },
    {
        title: 'Попапы, слайдеры, формы',
        link: '#',
        description: 'Сверстаем всплывающие элементы. Разберём приёмы стилизации форм и их элементов. Рассмотрим состояния и позиционирование элементов на странице.'
    },
    {
        title: 'Подготовка к защите',
        link: '#',
        description: 'Проверим проект на соответствие критериям качества и подготовим его к публикации.'
    },
    {
        title: 'Финал',
        link: '#',
        description: 'Завершение курса.'
    },
    {
        title: 'Проекты',
        link: '#',
        description: 'Описание проектов.'
    }
];
export const layoutDataLvlSecond = [
    {
        title: "Старт",
        link: '/frontend/html-and-css-level-second/start',
        description: "Рассмотрим устройство веба и чем вы будете заниматься на работе. Установим и настроим инструменты для работы."
    },
    {
        title: "Методологии вёрстки",
        link: "/frontend/html-and-css-level-second/metodologii-vyorstki",
        description: "Приёмы создания надёжной вёрстки"
    },
    {
        title: "Препроцессоры и автоматизация",
        link: "/frontend/html-and-css-level-second/preproczessory-i-avtomatizacziya",
        description: "Взглянем на препроцессоры и разберёмся, чем они помогают в процессе вёрстки."
    },
    {
        title: "Адаптивные сетки",
        link: "/frontend/html-and-css-level-second/adaptivnye-setki",
        description: "Узнаем как создавать адаптивные сетки с использованием гридов и флексов."
    },
    {
        title: "Адаптивные декоративные элементы",
        link: "/frontend/html-and-css-level-second/adaptivnye-dekorativnye-elementy",
        description: "Разбираемся с адаптивными декоративными элементами. Делаем адаптивную вёрстку с резиновыми сетками."
    },
    {
        title: "Адаптивная графика",
        link: "/frontend/html-and-css-level-second/adaptivnaya-grafika",
        description: "Погружаемся в адаптивную графику. Разбираемся с форматами и их назначением."
    },
    {
        title: "Векторная графика и оптимизация",
        link: "/frontend/html-and-css-level-second/vektornaya-grafika-i-optimizacziya",
        description: "Научимся использовать векторную графику всеми возможными способами. Разберёмся, как использовать графику оптимально."
    },
    {
        title: "Погружение в автоматизацию",
        link: "/frontend/html-and-css-level-second/pogruzhenie-v-avtomatizacziyu",
        description: "Подготовим сборку проекта для его публикации."
    },
    {
        title: "Производительность вёрстки",
        link: "/frontend/html-and-css-level-second/proizvoditelnost-vyorstki",
        description: "Разберёмся с производительностью вёрстки и попробуем оптимизировать «узкие места»."
    },
    {
        title: "Финал",
        link: "/frontend/html-and-css-level-second/final",
        description: ""
    },
    {
        title: "Критерии",
        link: "/frontend/html-and-css-level-second/kriterii",
        description: ""
    },
    {
        title: "Список проектов",
        link: "/frontend/html-and-css-level-second/projects",
        description: ""
    }
];
export const jsDataLvlOne = [
    {
        title: 'Знакомство c JavaScript',
        description: 'В этом разделе рассмотрим схему работы на курсе, какие инструменты понадобятся и как их настроить. Разберём, что представляет собой язык JavaScript, причём здесь спецификация ECMAScript и браузер.',
        link: '#'
    },
    {
        title: 'Основные возможности JavaScript',
        description: 'В этом разделе начнём изучать основные конструкции JavaScript, особенно пристально разберём функции. Изучим нюансы объявления переменных. Познакомимся с инструментами разработчика.',
        link: '#'
    },
    {
        title: 'Объекты и массивы',
        description: 'В этом разделе вы самостоятельно познакомитесь со сложными типами данных: массивами и объектами. Научитесь создавать их и управлять ими.',
        link: '#'
    },
    {
        title: 'Встроенные объекты и функции',
        description: 'Рассмотрим существующие в самом языке JavaScript объекты и функции. Затронем контекст выполнения this. Запустим и отладим код в консоли инструментов разработчика.',
        link: '#'
    },
    {
        title: 'Организация кода',
        description: 'Разберём понятие областей видимости. Обсудим принцип DRY (не повторяйся) и как им пользоваться для того, чтобы писать меньше кода, и при этом делать больше. Узнаем, что такое модули и как «бить» код на них; что такое точка входа.',
        link: '#'
    },
    {
        title: 'DOM и события',
        description: 'В этом разделе вы самостоятельно познакомитесь с объектной моделью документа (англ. Document Object Model или DOM). Рассмотрите, как описывать реакции на действия пользователя: ввод текста, нажатие на определённые элементы, прокрутку и прочее.',
        link: '#'
    },
    {
        title: 'Манипуляции с DOM',
        description: 'В этом разделе попробуем создавать, удалять, перемещать и управлять DOM-элементами. С помощью шаблонов отрисуем на странице данные, сгенерированные ранее.',
        link: '#'
    },
    {
        title: 'Работа с событиями',
        description: 'В этом разделе займёмся обработкой действий пользователя, чтобы страница реагировала на ввод текста в формы, нажатие на определённые элементы, прокрутку и прочее. Рассмотрим, как сделать это взаимодействие доступным.',
        link: '#'
    },
    {
        title: 'Внешние API и сторонние библиотеки',
        description: 'В этом разделе рассмотрим, как не «писать свой велосипед», а переиспользовать чужой опыт и код. Познакомимся с понятием программного интерфейса (англ. Application Programming Interface или API), рассмотрим API сторонних JavaScript-библиотек и JavaScript API картографических сервисов. Кратко рассмотрим API, которые предоставляет разработчикам браузер.',
        link: '#'
    },
    {
        title: 'Сеть',
        description: 'В этом разделе вы самостоятельно рассмотрите протокол HTTP, формат данных JSON. Рассмотрите, как меняется взаимодействие пользователя с сайтом при работе с сетью, что может пойти не так.',
        link: '#'
    },
    {
        title: 'Асинхронность. Работа с сетью',
        description: 'В этом разделе мы разберём понятие асинхронности и способы её достижения с помощью промисов (англ. Promise, обещание). Познакомимся с технологиями, которые позволяют делать запросы к серверу из браузера. Рассмотрим, как на практике обработать ошибки при работе с сетью, если что-то пошло не так.',
        link: '#'
    },
    {
        title: 'Обратная связь и оптимизация',
        description: 'В этом разделе мы оптимизируем работу с данными и событиями на нашем сайте. Реализуем понятную и приятную пользователю обратную связь интерфейса.',
        link: '#'
    },
    {
        title: 'Финал',
        description: 'В этом разделе мы подведём итоги курса, а после обсудим особенности JavaScript, с которыми вам, возможно, придётся столкнуться на работе. Понятие legacy-кода и что с ним, с кодом, делать. Кратко рассмотрим продвинутый инструментарий фронтенд-разработчика, чтобы вы понимали, куда двигаться дальше.',
        link: '#'
    }
];
export const jsDataLvlSecond = [
    {
        title: 'Single Page Application (SPA)',
        description: 'Рассмотрим схему работы на курсе и узнаем, какие инструменты нам понадобятся. Вспомним понятие модульности, ECMAScript-модули и разберём, как их (и зачем) собирать с помощью Webpack.',
        link: '#'
    },
    {
        title: 'Структуры данных',
        description: 'Узнаем, зачем нужны структуры данных frontend-разработчику и как их применять в своих проектах.',
        link: '#'
    },
    {
        title: 'ООП. Введение',
        description: 'Познакомимся с объектами в JavaScript и рассмотрим новый способ их создания — с помощью классов. Поговорим про (не)изменяемость данных и разберём основы ООП.',
        link: '#'
    },
    {
        title: 'ООП. Наследование и полиморфизм',
        description: 'Продолжаем знакомиться с ООП в JavaScript. Разберём понятия полиморфизма и наследования. Подчиним магический this (контекст). Попрактикуемся в написании компонентов многоразового использования.',
        link: '#'
    },
    {
        title: 'MVP. Presenter',
        description: 'Начнём детальный разбор составляющих MVP. С помощью презентера (presenter, англ.) установим связь между компонентом и структурой данных: обновление данных при взаимодействии пользователя с компонентами.',
        link: '#'
    },
    {
        title: 'MVP. View',
        description: 'Продолжим детальный разбор составляющих MVP. Рассмотрим способы реализации интерактивных компонентов, которые должны реагировать на действия пользователя без обновления данных.',
        link: '#'
    },
    {
        title: 'MVP. Model',
        description: 'Завершим детальный разбор составляющих MVP. Установим обратную связь: обновление компонентов при изменении данных.',
        link: '#'
    },
    {
        title: 'Работа с сетью',
        description: 'Вспомним, как работает протокол HTTP и промисы. Узнаем, что такое REST и REST API. Разберём, как проектировать интерфейсы, в которых есть асинхронный код так, чтобы пользователю было удобно.',
        link: '#'
    }
];
export const reactData = [
    {
        title: 'Знакомство с TypeScript',
        description: 'Рассмотрим схему работы на курсе. Узнаем что такое TypeScript, и какие задачи он решает. Познакомимся с системой типов и разберёмся, как происходит процесс типизации. Научимся конфигурировать компилятор и рассмотрим основные настройки. Затем перейдём к практике и разберёмся с особенностями написания типизированного кода: кортежи, интерфейсы, дженерики и так далее.',
        link: '#'
    },
    {
        title: 'React',
        description: 'Знакомство с библиотекой React. Узнаем, какие проблемы она решает и как может упростить разработку фронтенда. Подготовим основу проекта с помощью Vite. Научимся применять шаблоны для Vite. Затем познакомимся с основными возможностями библиотеки React (JSX, компоненты, передача данных между компонентами).',
        link: '#'
    },
    {
        title: 'Маршрутизация (React Router)',
        description: 'Узнаем как организована маршрутизация в SPA. Добавим в проект React Router и разберёмся с возможностями пакета: маршруты, перенаправления, приватные маршруты и так далее.',
        link: '#'
    },
    {
        title: 'React-компоненты. Hooks',
        description: 'Расширим знания о React и компонентах. Научимся управлять состоянием, использовать события и методы жизненного цикла компонентов. Познакомимся с React Hooks и узнаем, как заменить ими классовые компоненты. Научимся работать с формами.',
        link: '#'
    },
    {
        title: 'React и паттерны',
        description: 'Разбираемся с вопросом, что такое архитектура программного обеспечения и как её проектировать. Знакомимся и учимся на практике применять паттерны проектирования.',
        link: '#'
    },
    {
        title: 'Redux',
        description: 'Знакомимся с Flux-архитектурой: действия (Actions), диспетчеры (Dispatcher), представления (Views) и хранилища (Stores). Подключаем к проекту Redux и обновляем кодовую базу.',
        link: '#'
    },
    {
        title: 'Асинхронность в Redux',
        description: 'Научимся внедрять асинхронный код в синхронную работу Redux с помощью Middleware. Узнаем как взаимодействовать с сервером при помощи пакета Axios. Познакомимся с интерцепторами.',
        link: '#'
    },
    {
        title: 'Оптимизация производительности',
        description: 'Обсудим производительность React-приложений: какие есть особенности, на что следует обращать внимание при проектировании компонентов в первую очередь. Затем познакомимся с пакетом Redux Toolkit и узнаем как с его помощью избавиться от шаблонного кода при работе с Redux.',
        link: '#'
    },
    {
        title: 'Тестирование React',
        description: 'Познакомимся с инструментами и методиками тестирования React-приложений. Настроим инфраструктуру для тестирования, напишем тесты для компонентов.',
        link: '#'
    },
    {
        title: 'Финал',
        description: '',
        link: '#'
    }
];


